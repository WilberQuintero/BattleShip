/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package View; // O tu paquete de Vistas

// --- Imports Necesarios ---
import Controler.controladorInicio;
import Controler.controladorPartidaEspera; // El controlador específico
import java.util.List; // Para la lista de nombres
import javax.swing.DefaultListModel; // Modelo para JList
import javax.swing.JOptionPane;     // Para diálogos
import javax.swing.SwingUtilities; // Para seguridad de hilos en UI
import java.awt.Color; // Para cambiar color de texto en errores (opcional)

/**
 * Vista que muestra la sala de espera antes de iniciar la partida.
 * Permite al jugador marcarse como listo o salir.
 * Es actualizada por el controladorPartidaEspera.
 * (Versión integrada con código existente del usuario)
 */
public class PartidaEspera extends javax.swing.JFrame {

    // --- Tus Variables Existentes ---
    private javax.swing.Timer tiempo; // Timer para tu animación
    private int posicion = 0;         // Posición para tu animación

    // --- Nuevas Variables Necesarias ---
    private final controladorInicio controladorPrincipal;
//    private final controladorPartidaEspera controlador;
    private final String idSala;
    private final String miNombreUsuario;
    private DefaultListModel<String> listModelJugadores; // Modelo para el JList

    /**
     * Constructor de la Pantalla de Espera.
     * @param ctrlPrincipal Controlador principal para obtener comunicación y manejar cierre.
     * @param idSala ID de la sala a la que se entró.
     * @param miNombre Nombre del jugador local.
     */
    public PartidaEspera(controladorInicio ctrlPrincipal, String idSala, String miNombre) {
        initComponents(); // <<-- IMPORTANTE: Llama primero a esto
        this.setLocationRelativeTo(null);
        this.setTitle("Sala: " + idSala + " | Esperando - Battleship");

        // Guardar referencias
        this.controladorPrincipal = ctrlPrincipal;
        this.idSala = idSala;
        this.miNombreUsuario = miNombre;

//        // Crear e inicializar el controlador específico
//        controladorPartidaEspera ctrlEspera = null;
//        if (ctrlPrincipal != null && ctrlPrincipal.getServerComunicacion() != null) {
//            System.out.println("VIEW [PartidaEspera]: Creando controladorPartidaEspera para sala: " + idSala);
//            ctrlEspera = new controladorPartidaEspera(ctrlPrincipal.getServerComunicacion(), idSala, this);
//            ctrlPrincipal.setControladorEsperaActual(ctrlEspera);
//             System.out.println("VIEW [PartidaEspera]: Controlador específico creado y asignado.");
//        } else {
//             System.err.println("VIEW [PartidaEspera] ERROR CRÍTICO: No se pudo obtener ServerComunicacion.");
//             mostrarError("Error crítico de inicialización.", true);
//             ctrlEspera = null;
//             if(btnListo != null) btnListo.setEnabled(false); // Usar nombre de variable correcto
//             if(btnSalir != null) btnSalir.setEnabled(false); // Usar nombre de variable correcto
//        }
//        this.controlador = ctrlEspera;
//
//        // Configurar la UI inicial
//        configurarUIInicial();
//
//        // Iniciar tu animación de carga
//        tiempo(); // Llama a tu método existente para iniciar el Timer
    }

     /**
     * Configura el estado inicial de los componentes de la UI.
     */
    private void configurarUIInicial() {
        if(lblNombreSala != null) {
             lblNombreSala.setText("Sala: " + idSala);
        } else {
             System.err.println("VIEW [PartidaEspera] WARN: JLabel 'lblNombreSala' no encontrado.");
        }
//
//        // Configurar el modelo para el JList (DEBES AÑADIR 'listaJugadores' EN EL DISEÑADOR)
//        listModelJugadores = new DefaultListModel<>();
//        if(listaJugadores != null) {
//            listaJugadores.setModel(listModelJugadores);
//        } else {
//             System.err.println("VIEW [PartidaEspera] WARN: JList 'listaJugadores' no encontrado en initComponents. Debes añadirlo al diseñador.");
//        }

        // Añadir al jugador local a la lista
        if (this.miNombreUsuario != null && listModelJugadores != null) {
            listModelJugadores.addElement(this.miNombreUsuario + " (Tú)");
        }

        // Usar jLabel3 para mensajes de estado
        if (jLabel3 != null) {
            jLabel3.setText("Esperando oponente...");
        } else {
            System.err.println("VIEW [PartidaEspera] WARN: JLabel 'jLabel3' no encontrado para mostrar estado.");
        }

        
         if(btnSalir != null) btnSalir.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        lblNombreSala = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(32, 51, 75));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(36, 37, 56));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblNombreSala.setFont(new java.awt.Font("Sitka Display", 1, 36)); // NOI18N
        lblNombreSala.setForeground(new java.awt.Color(255, 255, 255));
        lblNombreSala.setText("SALA");
        jPanel3.add(lblNombreSala, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, -1, -1));

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(250, 250, 250));

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 40, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
        );

        jPanel2.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 40, 30));

        jPanel3.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 170, 400, 50));

        jLabel2.setFont(new java.awt.Font("Sitka Display", 1, 36)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Espera que la partida empiece");
        jPanel3.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(98, 90, -1, -1));

        jLabel3.setFont(new java.awt.Font("Sitka Display", 1, 36)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("SALA: ");
        jPanel3.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, -1, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 680, 330));

        btnSalir.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(255, 255, 255));
        btnSalir.setText("<");
        btnSalir.setBorderPainted(false);
        btnSalir.setContentAreaFilled(false);
        btnSalir.setFocusPainted(false);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        jPanel1.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 883, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 489, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        // TODO add your handling code here:

        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSalir;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JLabel lblNombreSala;
    // End of variables declaration//GEN-END:variables
}
